{"pageProps":{"proj_id":"musicplayer","project":{"url":"https://github.com/pfgithub/electron-music-player","img":[658,377,"/icons/musicplayer.png"],"title":"electron-music-player","body":["A music player written in electron that allows storing lyrics with songs and ","searching by lyrics."],"technologies":["typescript","electron","scss","vanilla_js","μhtml","parcel"],"github":{"repo":"pfgithub/electron-music-player","branch":"master"}},"project_readme":{"text":"<h1><a id=\"user-content-electron-music-player\" class=\"anchor\" aria-hidden=\"true\" href=\"https://github.com/pfgithub/electron-music-player/blob/master/#electron-music-player\" target=\"_blank\" rel=\"noopener noreferrer\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>electron-music-player</h1><p>A simple music player in electron</p><p><a href=\"https://github.com/pfgithub/electron-music-player/blob/master/.github/demo-2021-06-15.png\" target=\"_blank\" rel=\"noopener noreferrer\"><img alt=\"screenshot\" style=\"max-width:100%;\" src=\"https://raw.githubusercontent.com/pfgithub/electron-music-player/master/.github/demo-2021-06-15.png\"></a></p><p><a href=\"https://github.com/pfgithub/electron-music-player/blob/master/.github/demo-edit-2021-06-15.png\" target=\"_blank\" rel=\"noopener noreferrer\"><img alt=\"screenshot\" style=\"max-width:100%;\" src=\"https://raw.githubusercontent.com/pfgithub/electron-music-player/master/.github/demo-edit-2021-06-15.png\"></a></p><p>Music is loaded from ~/Music/***.mp3 by default.</p><p>Supports linux and maybe other operating systems if you're lucky.</p><h2><a id=\"user-content-usage\" class=\"anchor\" aria-hidden=\"true\" href=\"https://github.com/pfgithub/electron-music-player/blob/master/#usage\" target=\"_blank\" rel=\"noopener noreferrer\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Usage</h2><pre><code># Clone this repository\ngit clone https://github.com/pfgithub/electron-music-player\n# Go into the repository\ncd electron-music-player\n# Install dependencies\nyarn install\n# Build the app\nyarn build\n# Run the app\nyarn start </code></pre><h3><a id=\"user-content-edit-button\" class=\"anchor\" aria-hidden=\"true\" href=\"https://github.com/pfgithub/electron-music-player/blob/master/#edit-button\" target=\"_blank\" rel=\"noopener noreferrer\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Edit Button</h3><p>Edit lyrics and album art</p><p>Requires:</p><ul><li>ffmpeg</li><li>a writable <code>/tmp</code> dir for setting album art (TODO fix)</li><li>a scroll wheel (the scrollbar is broken, TODO fix)</li></ul><h3><a id=\"user-content-add-button\" class=\"anchor\" aria-hidden=\"true\" href=\"https://github.com/pfgithub/electron-music-player/blob/master/#add-button\" target=\"_blank\" rel=\"noopener noreferrer\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Add Button</h3><p>Add music.</p><p>Choose whether to copy from a local file or download from youtube-dl.</p><p>Requires:</p><ul><li><code>youtube-dl</code> and <code>ffmpeg</code> if used on a youtube video</li><li><code>sox</code> if tempo is not set to 1.0</li><li>coreutils (<code>mv</code>, <code>[</code>)</li></ul><h3><a id=\"user-content-os-support\" class=\"anchor\" aria-hidden=\"true\" href=\"https://github.com/pfgithub/electron-music-player/blob/master/#os-support\" target=\"_blank\" rel=\"noopener noreferrer\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>OS support</h3><p>Supports linux and maybe mac and probably not windows.</p><h3><a id=\"user-content-search-options\" class=\"anchor\" aria-hidden=\"true\" href=\"https://github.com/pfgithub/electron-music-player/blob/master/#search-options\" target=\"_blank\" rel=\"noopener noreferrer\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Search options</h3><p>Start a search with <code>!</code> to match exact text. Start a search with <code>/</code> to match regex (slow).</p><h3><a id=\"user-content-music-list-sidebar\" class=\"anchor\" aria-hidden=\"true\" href=\"https://github.com/pfgithub/electron-music-player/blob/master/#music-list-sidebar\" target=\"_blank\" rel=\"noopener noreferrer\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Music list sidebar</h3><p>Click the thing to skip to the end of the queue and play immediately, press the <code>+</code> button to add to the end of the\nqueue.</p><h3><a id=\"user-content-global-hotkeys\" class=\"anchor\" aria-hidden=\"true\" href=\"https://github.com/pfgithub/electron-music-player/blob/master/#global-hotkeys\" target=\"_blank\" rel=\"noopener noreferrer\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Global hotkeys</h3><p>Configure a global hotkey manager, eg</p><ul><li>mac: skhd</li><li>windows: google.com</li><li>linux: idk, I'm using ckb-next for single keys and i3 for hotkeys</li></ul><p>Then, bind keys of your choosing to:</p><p><code>node /path/to/electron-music-player/src/ipc.js [command]</code></p><p>command can be any of: <code>playpuase</code>, <code>next</code>, <code>prev</code>, <code>play</code>, <code>pause</code>, <code>randomfiltertoggle</code>, <code>randomfilteron</code>, <code>randomfilteroff</code></p><p>I have scroll lock/pause break bound to prev/next, page up bound to playpause, and page down bound to\nrandomfiltertoggle.</p><p>Additionally, there is <code>musicplayer-msg listall/listqueue/playsong/queue</code>. Usage example (fish shell + rofi command)</p><p><code>node …/src/ipc.js playsong (node …/src/ipc.js listall | rofi -dmenu -i)</code></p><p><code>node …/src/ipc.js queue (node …/src/ipc.js listall | rofi -dmenu -i)</code></p><p>Switching next modes:</p><p><code>musicplayer-msg setnextmode (musicplayer-msg listnextmodes | rofi -dmenu -i)</code></p><h2><a id=\"user-content-contributing\" class=\"anchor\" aria-hidden=\"true\" href=\"https://github.com/pfgithub/electron-music-player/blob/master/#contributing\" target=\"_blank\" rel=\"noopener noreferrer\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Contributing</h2><p>Use <code>yarn build-watch</code> to automatically build when you change a file. Use an editor plugin to see typescript errors\n(also don't use atom because it will run at &lt;15fps)</p><p>Likely the only file you have to edit is <code>src/player.ts</code>. The window is created in <code>src/main.ts</code>, so edit that if you\nneed to create new windows or adjust hotkeys.</p><h2><a id=\"user-content-todo\" class=\"anchor\" aria-hidden=\"true\" href=\"https://github.com/pfgithub/electron-music-player/blob/master/#todo\" target=\"_blank\" rel=\"noopener noreferrer\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>TODO</h2><p>things that might be done in the future if I ever get too tired of not having them:</p><ul><li>switch to webpack because the current build process is a mess</li><li>option to load album art from a local file</li><li>option to load album art from the clipboard</li><li>sort the sidebar</li><li>highlight search match locations in the lyrics display</li><li>add the ability to trim audio files (interactive editor - pick start and end location, test that start and end\nlocations are correct, trim by running ffmpeg)</li><li>ui improvements, especially for the edit and add pages so they don't look so disorganized.</li><li>full keyboard control (eg tab+enter works to select things from the list, ctrl+s to save and close the edit screen,\nescape to cancel, tab works to select the plus button on things, …)</li><li>option to associate time codes with lyrics (using the edit button) and then the reverse, clicking a lyric to jump to\nthe time code</li><li>resize images to like at most 128x128 or 256x256 or something so there aren't images that are literally 5mb</li></ul><p>things that would be good to do but I probably won't ever need:</p><ul><li>use mktempdir instead of <code>/tmp</code> for writing album art</li><li>update metadata on play to prevent outdated things from showing</li><li>show the duration and a scrubber for playing things</li><li>support non-mp3 files</li><li>ability to choose the folder it loads things from</li><li>tagging and stuff (manual text tags are good enough for now, I would want real tagging to use a seperate data\nfile/database so adding a tag does not rewrite the mp3 file)</li><li>shuffle weighting and ability to set a shuffle target or something. oh and don't play the same thing twice in a row.</li></ul>"}},"__N_SSG":true}